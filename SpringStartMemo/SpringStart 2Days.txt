SpringStart 2Days

빈의 이름은 기본은 메서드의 이름이다.
@Bean(name="HWT") => 이름을 줄 수 있다.

Spring Context에서 Bean을 다시 검색하는 방법
 System.out.println(context.getBean(Address.class));
클래스로도 빈의 내용을 가져올 수 있다.

SC에 Spring Bean을 활용하여 Bean을 만드는 방법
=> 메서드를 가져와서 사용하면 된다.
    @Bean(name="person2")
    public Person person2Method() {
        return new Person(name(), age());
    }	

매개변수를 통해 Bean 접근이 가능하다.
    @Bean(name = "person3")
    public Person person3Parameters(String name, int age, Address address2) {
        return new Person(name, age, address2);
    }



빈을 재활용하는 방법의 demo version
@Bean을 규정하는 메서드를 재활용하거나, 하드코딩하거나, 생성자가 증가하였을 떄 다른 빈의 메서드를 이용할 수 도
있다. 같은 컨텍스트 내의 있기에 움직임이 자유롭다.


spring 컨테이너, spring Context, ioc 컨테이너
스프링 컨테이너는 Spring Bean과 수명 주기를 관리한다.
설정파일이 스프링 컨테이너를 만들기 위한 인풋이다.
스프링 컨테이너의 아웃풋은 Ready System이다.
Jvm 내부에 spring Context가 존재한다.
=> 런타임 시에 빈이 활동한다.

java클래스와 설정을 만들면 ioc 컨테이너가 런타임 시스템을 만든다.

그냥 spring container, spring context은 같은 말이고 ioc 컨테이너는 좀 더 상위의 개념이다.
비슷한 말이다.

ioc Container는 두 가지 형식이 존재한다.
Bean Factory => 기본 Spring 컨테이너이다. (잘 사용하지 않는다.)
Applicatipn Context => 엔터프라이즈 전용 기능이 있는 고급 Spring 컨테이너이다.

pojo, javaBean, SpringBean의 차이

pojo => 오래된 자바 객체, 모든 객체는 pojo이다. 아무런 제약 없이 만든 클래스에 대한 인스턴스를 pojo라고 한다.

javaBean => 클래스의 변수에 no-arg Constructor, Getter,Setter, implement Serializable를 구현한 클래스를 인스턴스하면 그것이 java bean이다.

스프링이 관리하는 bean 프레임워크를 모두 나열하려면 어떻게 할까?






















