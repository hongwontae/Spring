Spring FrameWork 2023-07-08-1

Spring으로 객체를 생성

1. 설정파일과 spring context를 합칠 수 있다.

@Component => Spring이 관리할 컴포넌트라고 선언
이 어노테이션이 붙은 클래스는 Configration과 클래스패스 스캐닝을 사용할 때 자동 감지에 대한 후보로 간주
이것만 하면 오류가 발생한다.

PackMan에 컴포넌트를 추가했다. => 그러면 Spring에게 PacMan을 찾아야 하는 곳을 알려줘야 하기 때문이다.

component => 클래스의 객체들을 모두 빈으로 만듬
baen => @Bean 어노테이션이 붙은 객체들만 빈으로 만든다.

자동 와이어링 => 빈 객체의 연관성, 결합을 자동으로 해준다.

@Component을 걸면 main메서드에서 @componentScan으로 읽어와야 한다.
근데 Component가 중복된 객체들이 있다면?
=> 메인 메서드의 실행에서 오류가 발생한다.
해결하는 방법 => 클래스에 @Primary를 부여한다.Bean의 우선권 차지

@Qulifier => 자동 와이어링 시 필드나 매개변수에서 후보 Bean에 대한 한정자로 쓰인다.

primary => 여러 후보가 자격이 있는 경우, Bean에게 우선권을 주는 것을 말한다.
Qulifier => 특정 Bean이 자동 와이어링이 되어야 한다.
=> 퀄리파이어의 역할은 특정하게 지정된 Bean을 자동 와이어링하는 것이다.
qulifier가 항상 primary보다 더 높은 우선순위를 가지고 있다.

클래스에 한정자/ 메인 메서드에 한정자 구현
=> 만약에 클래스에 한정자가 없는 빈이 있고 그 빈을 한정자로 구현하고 싶다면 메인 메서드에서
빈의 이름으로 @Qulifier를 사용해서 구현하면 된다.








